#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property clientAccept ${nuklei.streams("http", "source")}
property clientConnect ${nuklei.streams("target", "http#source")}
property clientConnectReply ${nuklei.streams("http", "target")}
property clientAcceptReply ${nuklei.streams("source", "http#target")}

property newClientConnectId ${nuklei:newStreamId()}
property newClientAcceptReplyId1 ${nuklei:newStreamId()}
property newClientAcceptReplyId2 ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAccept.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientAccept.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientAcceptId1)
read ([0..8]:clientAcceptRef)
read ([0..8]:sourceCorrelationId1)
read [0x00] [0x07] ":scheme" [0x04] "http"
read [0x00] [0x07] ":method" [0x03] "GET"
read [0x00] [0x05] ":path" [0x09] "/request1"
read [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"

read notify HTTP_REQUEST_ONE_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${clientAcceptId1}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${clientAcceptId1}

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientAcceptId2)
read ([0..8]:clientAcceptRef)
read ([0..8]:sourceCorrelationId2)
read [0x00] [0x07] ":scheme" [0x04] "http"
read [0x00] [0x07] ":method" [0x03] "GET"
read [0x00] [0x05] ":path" [0x09] "/request2"
read [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"

read notify HTTP_REQUEST_TWO_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${clientAcceptId2}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${clientAcceptId2}

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnect.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnect.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientConnectId}
write ${newClientConnectRef}
write ${newTargetCorrelationId}
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

write await HTTP_REQUEST_ONE_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newClientConnectId}
write [0x00 0x30]
write "GET /request1 HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

write await HTTP_REQUEST_TWO_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newClientConnectId}
write [0x00 0x30]
write "GET /request2 HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnectReply.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnectReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientConnectReplyId)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId}

write [0x40 0x00 0x00 0x02]
write ${clientConnectReplyId}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x26]
read "HTTP/1.1 200 OK\r\n"
read "Content-Length: 8\r\n"
read "\r\n"

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x08]
read "request1"

read notify HTTP_RESPONSE_ONE_DECODED

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x26]
read "HTTP/1.1 200 OK\r\n"
read "Content-Length: 8\r\n"
read "\r\n"

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x08]
read "request2"

read notify HTTP_RESPONSE_TWO_DECODED

close
closed


connect await HTTP_RESPONSE_ONE_DECODED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAcceptReply.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientAcceptReply.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientAcceptReplyId1}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId1}
write [0x00] [0x07] ":status" [0x03] "200"
write [0x00] [0x0e] "content-length" [0x01] "8"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId1}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newClientAcceptReplyId1}
write [0x00 0x08]
write "request1"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId1}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newClientAcceptReplyId1}

write await HTTP_RESPONSE_TWO_DECODED

write [0x00 0x00 0x00 0x01]
write ${newClientAcceptReplyId2}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId2}
write [0x00] [0x07] ":status" [0x03] "200"
write [0x00] [0x0e] "content-length" [0x01] "8"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId2}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newClientAcceptReplyId2}
write [0x00 0x08]
write "request2"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId2}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newClientAcceptReplyId2}
write flush

close
closed
