#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newServerAcceptRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property serverAccept ${nuklei.streams("http", "source")}
property serverAcceptReply1 ${nuklei.streams("source", "http#source")}
property serverAcceptReply2 ${nuklei.streams("source", "http#target")}

property newServerAcceptId ${nuklei:newStreamId()}
property newSourceCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAccept.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverAccept.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newServerAcceptId}
write ${newServerAcceptRef}
write ${newSourceCorrelationId}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerAcceptId}
write [0x00 0x30]
write "GET /request1 HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "\r\n"
write flush

write [0x00 0x00 0x00 0x02]
write ${newServerAcceptId}
write [0x00 0x30]
write "GET /request2 HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "\r\n"
write flush

write [0x00 0x00 0x00 0x03]
write ${newServerAcceptId}
write flush

close
closed


connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAcceptReply1.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverAcceptReply1.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverAcceptReplyId)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newSourceCorrelationId}

read notify SOURCE_OUTPUT_BEGIN_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${serverAcceptReplyId}
write [0x00 0x02 0x00 0x00]
write flush

connect await SOURCE_OUTPUT_BEGIN_RECEIVED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAcceptReply2.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverAcceptReply2.throttle)}
connected

read [0x00 0x00 0x00 0x02]
read ${serverAcceptReplyId}
read [0x00 0x26]
read "HTTP/1.1 200 OK\r\n"
read "Content-Length: 8\r\n"
read "\r\n"

write [0x40 0x00 0x00 0x02]
write ${serverAcceptReplyId}
write [0x26 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverAcceptReplyId}
read [0x00 0x08]
read "request1"

write [0x40 0x00 0x00 0x02]
write ${serverAcceptReplyId}
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverAcceptReplyId}
read [0x00 0x26]
read "HTTP/1.1 200 OK\r\n"
read "Content-Length: 8\r\n"
read "\r\n"

write [0x40 0x00 0x00 0x02]
write ${serverAcceptReplyId}
write [0x26 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverAcceptReplyId}
read [0x00 0x08]
read "request2"

read [0x00 0x00 0x00 0x03]
read ${serverAcceptReplyId}

close
closed
