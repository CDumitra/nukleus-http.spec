#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newServerConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property serverAccept ${nuklei.streams("http", "source")}
property serverConnect ${nuklei.streams("target", "http#source")}
property serverConnectReply ${nuklei.streams("http", "target")}
property serverAcceptReply1 ${nuklei.streams("source", "http#source")}
property serverAcceptReply2 ${nuklei.streams("source", "http#target")}

property newServerConnectId1 ${nuklei:newStreamId()}
property newServerConnectId2 ${nuklei:newStreamId()}
property newServerAcceptReplyId1 ${nuklei:newStreamId()}
property newServerAcceptReplyId2 ${nuklei:newStreamId()}
property newTargetCorrelationId1 ${nuklei:newCorrelationId()}
property newTargetCorrelationId2 ${nuklei:newCorrelationId()}

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAccept.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverAccept.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverAcceptId1)
read ([0..8]:serverAcceptRef)
read ([0..8]:newSourceCorrelationId1)

write [0x40 0x00 0x00 0x02]
write ${serverAcceptId1}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverAcceptId1}
read [0x00 0x30]
read "GET /request1 HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "\r\n"

read notify HTTP_REQUEST_ONE_DECODED

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverAcceptId2)
read ([0..8]:serverAcceptRef)
read ([0..8]:newSourceCorrelationId2)

write [0x40 0x00 0x00 0x02]
write ${serverAcceptId2}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverAcceptId2}
read [0x00 0x30]
read "GET /request2 HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "\r\n"

read notify HTTP_REQUEST_TWO_DECODED

close
closed


connect await HTTP_REQUEST_ONE_DECODED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnect.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnect.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newServerConnectId1}
write ${newServerConnectRef}
write ${newTargetCorrelationId1}
write ${http:header(":scheme", "http")}
write ${http:header(":method", "GET")}
write ${http:header(":path", "/request1")}
write ${http:header(":authority", "localhost:8080")}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectId1}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newServerConnectId1}
write flush

write await HTTP_REQUEST_TWO_DECODED

write [0x00 0x00 0x00 0x01]
write ${newServerConnectId2}
write ${newServerConnectRef}
write ${newTargetCorrelationId2}
write ${http:header(":scheme", "http")}
write ${http:header(":method", "GET")}
write ${http:header(":path", "/request2")}
write ${http:header(":authority", "localhost:8080")}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectId2}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newServerConnectId2}
write flush

close
closed

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnectReply.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnectReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverConnectReplyId1)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId1}
read ${http:header(":status", "200")}
read ${http:header("content-length", "8")}

read notify HTTP_RESPONSE_ONE_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${serverConnectReplyId1}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverConnectReplyId1}
read [0x00 0x08]
read "request1"

write [0x40 0x00 0x00 0x02]
write ${serverConnectReplyId1}
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${serverConnectReplyId1}

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverConnectReplyId2)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId2}
read ${http:header(":status", "200")}
read ${http:header("content-length", "8")}

write [0x40 0x00 0x00 0x02]
write ${serverConnectReplyId2}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${serverConnectReplyId2}
read [0x00 0x08]
read "request2"

write [0x40 0x00 0x00 0x02]
write ${serverConnectReplyId2}
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${serverConnectReplyId2}

connect await HTTP_RESPONSE_ONE_RECEIVED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAcceptReply1.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverAcceptReply1.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newServerAcceptReplyId1}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId1}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptReplyId1}
read [0..4]

write notify SOURCE_OUTPUT_BEGIN_ONE_WRITTEN

write [0x00 0x00 0x00 0x01]
write ${newServerAcceptReplyId2}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId2}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptReplyId2}
read [0..4]

write notify SOURCE_OUTPUT_BEGIN_TWO_WRITTEN

connect await SOURCE_OUTPUT_BEGIN_ONE_WRITTEN
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverAcceptReply2.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverAcceptReply2.buffer)}
connected

write [0x00 0x00 0x00 0x02]
write ${newServerAcceptReplyId1}
write [0x00 0x26]
write "HTTP/1.1 200 OK\r\n"
write "Content-Length: 8\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptReplyId1}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerAcceptReplyId1}
write [0x00 0x08]
write "request1"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptReplyId1}
read [0..4]

write await SOURCE_OUTPUT_BEGIN_TWO_WRITTEN

write [0x00 0x00 0x00 0x02]
write ${newServerAcceptReplyId2}
write [0x00 0x26]
write "HTTP/1.1 200 OK\r\n"
write "Content-Length: 8\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerAcceptReplyId2}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${serverAcceptReplyId2}
write [0x00 0x08]
write "request2"
write flush

close
closed
