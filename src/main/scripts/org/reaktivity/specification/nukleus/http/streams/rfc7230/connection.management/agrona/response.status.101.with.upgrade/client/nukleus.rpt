#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property newClientAccept ${nuklei.streams("http", "source")}
property clientConnect ${nuklei.streams("target", "http#source")}
property clientConnectReply ${nuklei.streams("http", "target")}
property clientAcceptReply ${nuklei.streams("source", "http#target")}

property newClientConnectId ${nuklei:newStreamId()}
property newClientAcceptReplyId ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(newClientAccept.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(newClientAccept.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:newClientAcceptId)
read ([0..8]:newClientAcceptRef)
read ([0..8]:newSourceCorrelationId)
read [0x00] [0x07] ":scheme" [0x04] "http"
read [0x00] [0x07] ":method" [0x03] "GET"
read [0x00] [0x05] ":path" [0x01] "/"
read [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
read [0x00] [0x0a] "connection" [0x07] "Upgrade"
read [0x00] [0x07] "upgrade" [0x08] "protocol"

read notify HTTP_REQUEST_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${newClientAcceptId}
write [0x50 0x01 0x00 0x00]
write flush

write [0x40 0x00 0x00 0x02]
write ${newClientAcceptId}
write [0x50 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${newClientAcceptId}
read [0x00 0x17]
read "custom protocol payload"

write [0x40 0x00 0x00 0x02]
write ${newClientAcceptId}
write [0x17 0x00 0x00 0x00] # TODO: native int
write flush

read [0x00 0x00 0x00 0x03]
read ${newClientAcceptId}

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnect.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnect.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientConnectId}
write ${newClientConnectRef}
write ${newTargetCorrelationId}
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

write await HTTP_REQUEST_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newClientConnectId}
write [0x00 0x50]
write "GET / HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "Connection: Upgrade\r\n" 
write "Upgrade: protocol\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newClientConnectId}
write [0x00 0x17]
write "custom protocol payload"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnectReply.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnectReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientConnectReplyId)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId}

write [0x40 0x00 0x00 0x02]
write ${clientConnectReplyId}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x37]
read "HTTP/1.1 101 Switching Protocols\r\n"
read "Upgrade: protocol\r\n"
read "\r\n"

read notify HTTP_RESPONSE_DECODED

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x23]
read "custom protocol payload from remote"

close
closed


connect await HTTP_RESPONSE_DECODED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAcceptReply.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientAcceptReply.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientAcceptReplyId}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId}
write [0x00] [0x07] ":status" [0x03] "101"
write [0x00] [0x07] "upgrade" [0x08] "protocol"
write flush

write [0x00 0x00 0x00 0x02]
write ${newClientAcceptReplyId}
write [0x00 0x23]
write "custom protocol payload from remote"
write flush

close
closed
