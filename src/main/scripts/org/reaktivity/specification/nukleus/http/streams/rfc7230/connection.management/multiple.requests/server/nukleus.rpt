#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newTargetInputRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceInput ${nuklei.streams("http", "source")}
property targetInput ${nuklei.streams("target", "http#source")}
property targetOutputEst ${nuklei.streams("http", "target")}
property sourceOutputEst ${nuklei.streams("source", "http#target")}

property newTargetInputId1 ${nuklei:newStreamId()}
property newTargetInputId2 ${nuklei:newStreamId()}
property newSourceOutputEstId1 ${nuklei:newStreamId()}
property newSourceOutputEstId2 ${nuklei:newStreamId()}
property newTargetCorrelationId1 ${nuklei:newCorrelationId()}
property newTargetCorrelationId2 ${nuklei:newCorrelationId()}

connect await ROUTED_INPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceInput.buffer)}
        option writer ${agrona:oneToOneWriter(sourceInput.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:sourceInputId1)
read ([0..8]:sourceInputRef)
read ([0..8]:newSourceCorrelationId1)

write [0x40 0x00 0x00 0x02]
write ${sourceInputId1}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId1}
read [0x00 0x30]
read "GET /request1 HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "\r\n"

read notify HTTP_REQUEST_ONE_DECODED

read [0x00 0x00 0x00 0x01]
read ([0..8]:sourceInputId2)
read ([0..8]:sourceInputRef)
read ([0..8]:newSourceCorrelationId2)

write [0x40 0x00 0x00 0x02]
write ${sourceInputId2}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId2}
read [0x00 0x30]
read "GET /request2 HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "\r\n"

read notify HTTP_REQUEST_TWO_DECODED

close
closed


connect await HTTP_REQUEST_ONE_DECODED
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetInput.throttle)}
        option writer ${agrona:oneToOneWriter(targetInput.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newTargetInputId1}
write ${newTargetInputRef}
write ${newTargetCorrelationId1}
write [0x00] [0x07] ":scheme" [0x04] "http"
write [0x00] [0x07] ":method" [0x03] "GET"
write [0x00] [0x05] ":path" [0x09] "/request1"
write [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId1}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newTargetInputId1}
write flush

write await HTTP_REQUEST_TWO_DECODED

write [0x00 0x00 0x00 0x01]
write ${newTargetInputId2}
write ${newTargetInputRef}
write ${newTargetCorrelationId2}
write [0x00] [0x07] ":scheme" [0x04] "http"
write [0x00] [0x07] ":method" [0x03] "GET"
write [0x00] [0x05] ":path" [0x09] "/request2"
write [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId2}
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newTargetInputId2}
write flush

close
closed

connect await ROUTED_OUTPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetOutputEst.buffer)}
        option writer ${agrona:oneToOneWriter(targetOutputEst.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetOutputEstId1)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId1}
read [0x00] [0x07] ":status" [0x03] "200"
read [0x00] [0x0e] "content-length" [0x01] "8"

read notify HTTP_RESPONSE_ONE_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${targetOutputEstId1}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${targetOutputEstId1}
read [0x00 0x08]
read "request1"

write [0x40 0x00 0x00 0x02]
write ${targetOutputEstId1}
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${targetOutputEstId1}

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetOutputEstId2)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId2}
read [0x00] [0x07] ":status" [0x03] "200"
read [0x00] [0x0e] "content-length" [0x01] "8"

write [0x40 0x00 0x00 0x02]
write ${targetOutputEstId2}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${targetOutputEstId2}
read [0x00 0x08]
read "request2"

write [0x40 0x00 0x00 0x02]
write ${targetOutputEstId2}
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x03]
read ${targetOutputEstId2}

connect await HTTP_RESPONSE_ONE_RECEIVED
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceOutputEst.throttle)}
        option writer ${agrona:oneToOneWriter(sourceOutputEst.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newSourceOutputEstId1}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId1}
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId1}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newSourceOutputEstId1}
write [0x00 0x26]
write "HTTP/1.1 200 OK\r\n"
write "Content-length: 8\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId1}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newSourceOutputEstId1}
write [0x00 0x08]
write "request1"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId1}
read [0..4]


write [0x00 0x00 0x00 0x01]
write ${newSourceOutputEstId2}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${newSourceCorrelationId2}
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId2}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newSourceOutputEstId2}
write [0x00 0x26]
write "HTTP/1.1 200 OK\r\n"
write "Content-length: 8\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId2}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${sourceOutputEstId2}
write [0x00 0x08]
write "request2"
write flush

close
closed
