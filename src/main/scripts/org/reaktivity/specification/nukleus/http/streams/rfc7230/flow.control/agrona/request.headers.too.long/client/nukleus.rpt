#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property clientAccept ${nuklei.streams("http", "source")}
property clientConnect ${nuklei.streams("target", "http#source")}
property clientConnectReply ${nuklei.streams("http", "target")}
property clientAcceptReply ${nuklei.streams("source", "http#target")}

property newClientConnectId ${nuklei:newStreamId()}
property newClientAcceptReplyId ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAccept.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientAccept.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientAcceptId)
read [0x06] "source"
read ([0..8]:clientAcceptRef)
read ([0..8]:newSourceCorrelationId)
read ${http:header(":scheme", "http")}
read ${http:header(":method", "GET")}
read ${http:header(":path", "/")}
read ${http:header(":authority", "localhost:8080")}
read ${http:header("Custom-Header-1", "custom header 1 value")}
read ${http:header("Custom-Header-2", "custom header 2 value")}

read notify HTTP_REQUEST_RECEIVED

write [0x40 0x00 0x00 0x01]
write ${clientAcceptId}
write flush

close
closed

