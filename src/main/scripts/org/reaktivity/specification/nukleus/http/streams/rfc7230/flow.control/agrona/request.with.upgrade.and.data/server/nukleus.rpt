#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newTargetInputRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceInput ${nuklei.streams("http", "source")}
property targetInput ${nuklei.streams("target", "http#source")}
property targetOutputEst ${nuklei.streams("http", "target")}
property sourceOutputEst1 ${nuklei.streams("source", "http#source")}
property sourceOutputEst2 ${nuklei.streams("source", "http#target")}

property newTargetInputId ${nuklei:newStreamId()}
property newSourceOutputEstId ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_INPUT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(sourceInput.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(sourceInput.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:sourceInputId)
read ([0..8]:sourceInputRef)
read ([0..8]:sourceCorrelationId)

write [0x40 0x00 0x00 0x02]
write ${sourceInputId}
write [0x80 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId}
read [0x00 0x50]
read "GET / HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "Connection: Upgrade\r\n"
read "Upgrade: protocol\r\n"
read "\r\n"

write notify HTTP_REQUEST_HEADERS_DECODED

read [0x00 0x00 0x00 0x02]
read ${sourceInputId}
read [0x00 0x22]
read "custom protocol payload 34 bytes 1"

read notify HTTP_REQUEST_PAYLOAD_DECODED

write [0x40 0x00 0x00 0x02]
write ${sourceInputId}
write [0x50 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId}
read [0x00 0x22]
read "custom protocol payload 34 bytes 2"

write [0x40 0x00 0x00 0x02]
write ${sourceInputId}
write [0x22 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId}
read [0x00 0x22]
read "custom protocol payload 34 bytes 3"

write [0x40 0x00 0x00 0x02]
write ${sourceInputId}
write [0x22 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${sourceInputId}
read [0x00 0x22]
read "custom protocol payload 34 bytes 4"

write [0x40 0x00 0x00 0x02]
write ${sourceInputId}
write [0x22 0x00 0x00 0x00]
write flush

close
closed

connect await HTTP_REQUEST_HEADERS_DECODED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(targetInput.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(targetInput.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newTargetInputId}
write ${newTargetInputRef}
write ${newTargetCorrelationId}
write [0x00] [0x07] ":scheme" [0x04] "http"
write [0x00] [0x07] ":method" [0x03] "GET"
write [0x00] [0x05] ":path" [0x01] "/"
write [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
write [0x00] [0x0a] "connection" [0x07] "Upgrade"
write [0x00] [0x07] "upgrade" [0x08] "protocol"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId}
read [0..4]

write await HTTP_REQUEST_PAYLOAD_DECODED

write [0x00 0x00 0x00 0x02]
write ${newTargetInputId}
write [0x00 0x22]
write "custom protocol payload 34 bytes 1"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newTargetInputId}
write [0x00 0x22]
write "custom protocol payload 34 bytes 2"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newTargetInputId}
write [0x00 0x22]
write "custom protocol payload 34 bytes 3"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newTargetInputId}
write [0x00 0x22]
write "custom protocol payload 34 bytes 4"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInputId}
read [0..4]

close
closed

connect await ROUTED_OUTPUT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(targetOutputEst.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(targetOutputEst.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetOutputEstId)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId}
read [0x00] [0x07] ":status" [0x03] "101"
read [0x00] [0x07] "upgrade" [0x08] "protocol"

read notify HTTP_RESPONSE_HEADERS_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${targetOutputEstId}
write [0x00 0x02 0x00 0x00]
write flush

close
closed

connect await HTTP_RESPONSE_HEADERS_RECEIVED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(sourceOutputEst1.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(sourceOutputEst1.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newSourceOutputEstId}
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${sourceCorrelationId}
write flush

write notify SOURCE_OUTPUT_BEGIN_WRITTEN

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId}
read [0..4]

connect await SOURCE_OUTPUT_BEGIN_WRITTEN
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(sourceOutputEst2.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(sourceOutputEst2.buffer)}
connected

write [0x00 0x00 0x00 0x02]
write ${newSourceOutputEstId}
write [0x00 0x37]
write "HTTP/1.1 101 Switching Protocols\r\n"
write"Upgrade: protocol\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceOutputEstId}
read [0..4]

close
closed
